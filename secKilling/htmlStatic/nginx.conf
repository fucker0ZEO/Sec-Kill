
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #upstream 设置的就是真正的后端服务器。backend_server是真正的后端服务器
    upstream backend_server{
        #指定后端服务器真正的IP地址，地址用内网地址，这样毕竟快
        #weight代表权重，代表两台server权重相等。即轮询策略时是采用1：1的关系，两个节点分配的请求一样多
        server 172.16.243.156 weight=1;
        server 172.16.243.157 weight=1;

    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #这个location用做静态资源
        location /resources/ { 
           # root   html; roothtml改成alias
		#alilas代表替换,命中后会把/resources替换为alias指定的路径
	    alias  /usr/local/openresty/nginx/html/resources/;
            index  index.html index.htm;
        }
        #其他请求当作动态资源用。当访问命中/ （除开/resources/） 这个节点时，
        #nginx不处理，而是代理(或者说是转发)到http://backend_server上
        #后端服务器拿到的客户端host是Nginx给它的。即proxy_set_header
        #而这个host又刚好是拼接而成的。$http_host 是Nginx接到的URL，即浏览器地址栏中输入的URL
        #$proxy_port 是Nginx接到的端口号，默认是80
        location / {
            proxy_pass http://backend_server;
            #指定http的host且要带上端口号。$http_host是秒杀server这个域名，port对应默认端口号80
            proxy_set_header Host $http_host:$proxy_port;
            #真正的IP地址X_Real_IP，其实是$remote_addr，即远程的IP地址
            proxy_set_header X_Real_IP $remote_addr;
            #Nginx做为web服务器转发了请求
          #  proxy_set_header X_Forwarded_For $proxy_add_x_forwarded_for; 这里写错了，正确的如下：
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
